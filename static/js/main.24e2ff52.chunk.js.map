{"version":3,"sources":["Component/Room.tsx","Component/PartOfBuilding.tsx","Component/MainBuilding.tsx","Component/Inventory.tsx","Component/InventoryList.tsx","Component/Building.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["Room","room","activElement","setId","setActiv","inventoryAvailability","inventory","filter","i","placeId","id","className","onClick","data","name","length","version","xmlns","width","height","viewBox","fill","d","PartOfBuilding","construction","places","rooms","parts","includes","useState","openChildParts","setOpen","stroke-width","stroke","x1","x2","y1","y2","map","MainBuilding","build","openpartsOfBuilding","partsOfBuilding","childConstructionsParts","flatMap","c","idsByPartsBuild","p","idsInvent","partsChild","idsChild","strokeWidth","Inventory","idInventory","setinventory","invent","changePlace","childEl","useForm","register2","register","handleSubmit2","handleSubmit","errors2","errors","reset2","reset","openEdit","setOpenEdit","togleEditWind","editInvent","editInventory","firebase","firestore","collection","doc","update","count","then","onSubmit","console","log","defaultValue","ref","required","minLength","type","delete","cx","cy","r","points","InventoryList","sortedInventory","openInputAddInvent","togle","addInventory","nameInventory","filestore","set","place","placeholder","Building","apps","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setplaces","useEffect","get","response","docs","x","part","info","sortPlacesByParts","mainBuildings","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.24e2ff52.chunk.js","sourcesContent":["import \"./building.css\"\r\nimport { InventoryInt, PlaceInt } from \"../Interfaces/interfaces\"\r\n\r\ninterface Props {\r\n  setId: React.Dispatch<React.SetStateAction<string[]>>\r\n  setActiv: React.Dispatch<React.SetStateAction<string>>\r\n  activElement: string\r\n  inventory: InventoryInt[]\r\n  room: PlaceInt\r\n}\r\n\r\nexport const Room: React.FC<Props> = ({\r\n  room,\r\n  activElement,\r\n  setId,\r\n  setActiv,\r\n  inventory,\r\n}) => {\r\n  let inventoryAvailability: InventoryInt[] = inventory.filter(\r\n    (i: InventoryInt) => i.placeId === room.id\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      <span\r\n        className={room.id === activElement ? \"activ\" : \"name\"}\r\n        onClick={() => {\r\n          setId([room.id])\r\n          setActiv(room.id)\r\n        }}\r\n        key={room.id}\r\n      >\r\n        <span>{room.data.name}</span>\r\n      </span>\r\n      {inventoryAvailability.length > 0 && (\r\n        <span className=\"iconInv\">\r\n          <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M12 7v-2l-1.2-0.4c-0.1-0.3-0.2-0.7-0.4-1l0.6-1.2-1.5-1.3-1.1 0.5c-0.3-0.2-0.6-0.3-1-0.4l-0.4-1.2h-2l-0.4 1.2c-0.3 0.1-0.7 0.2-1 0.4l-1.1-0.5-1.4 1.4 0.6 1.2c-0.2 0.3-0.3 0.6-0.4 1l-1.3 0.3v2l1.2 0.4c0.1 0.3 0.2 0.7 0.4 1l-0.5 1.1 1.4 1.4 1.2-0.6c0.3 0.2 0.6 0.3 1 0.4l0.3 1.3h2l0.4-1.2c0.3-0.1 0.7-0.2 1-0.4l1.2 0.6 1.4-1.4-0.6-1.2c0.2-0.3 0.3-0.6 0.4-1l1.2-0.4zM3 6c0-1.7 1.3-3 3-3s3 1.3 3 3c0 1.7-1.3 3-3 3s-3-1.3-3-3z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M7.5 6c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M16 3v-1h-0.6c0-0.2-0.1-0.4-0.2-0.5l0.4-0.4-0.7-0.7-0.4 0.4c-0.2-0.1-0.3-0.2-0.5-0.2v-0.6h-1v0.6c-0.2 0-0.4 0.1-0.5 0.2l-0.4-0.4-0.7 0.7 0.4 0.4c-0.1 0.2-0.2 0.3-0.2 0.5h-0.6v1h0.6c0 0.2 0.1 0.4 0.2 0.5l-0.4 0.4 0.7 0.7 0.4-0.4c0.2 0.1 0.3 0.2 0.5 0.2v0.6h1v-0.6c0.2 0 0.4-0.1 0.5-0.2l0.4 0.4 0.7-0.7-0.4-0.4c0.1-0.2 0.2-0.3 0.2-0.5h0.6zM13.5 3.5c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M15.4 11.8c-0.1-0.3-0.2-0.6-0.4-0.9l0.3-0.6-0.7-0.7-0.5 0.4c-0.3-0.2-0.6-0.3-0.9-0.4l-0.2-0.6h-1l-0.2 0.6c-0.3 0.1-0.6 0.2-0.9 0.4l-0.6-0.3-0.7 0.7 0.3 0.6c-0.2 0.3-0.3 0.6-0.4 0.9l-0.5 0.1v1l0.6 0.2c0.1 0.3 0.2 0.6 0.4 0.9l-0.3 0.6 0.7 0.7 0.6-0.3c0.3 0.2 0.6 0.3 0.9 0.4l0.1 0.5h1l0.2-0.6c0.3-0.1 0.6-0.2 0.9-0.4l0.6 0.3 0.7-0.7-0.4-0.5c0.2-0.3 0.3-0.6 0.4-0.9l0.6-0.2v-1l-0.6-0.2zM12.5 14c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5z\"\r\n            ></path>\r\n          </svg>\r\n        </span>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport \"./building.css\"\r\nimport { Room } from \"./Room\"\r\nimport { InventoryInt, PlaceInt } from \"../Interfaces/interfaces\"\r\n\r\ninterface Props {\r\n  setId: React.Dispatch<React.SetStateAction<string[]>>\r\n  setActiv: React.Dispatch<React.SetStateAction<string>>\r\n  activElement: string\r\n  inventory: InventoryInt[]\r\n  construction: PlaceInt\r\n  places: PlaceInt[]\r\n}\r\n\r\nexport const PartOfBuilding: React.FC<Props> = ({\r\n  construction,\r\n  places,\r\n  setId,\r\n  setActiv,\r\n  activElement,\r\n  inventory,\r\n}) => {\r\n  let rooms =\r\n    construction.parts &&\r\n    places.filter((i) => construction.parts.includes(i.id))\r\n\r\n  const [openChildParts, setOpen] = useState<boolean>(false)\r\n  const togle = () => setOpen(!openChildParts)\r\n\r\n  const addId = () => {\r\n    if (construction.parts && construction.parts.length) {\r\n      setId([construction.id, ...construction.parts])\r\n      setActiv(construction.id)\r\n    } else if (construction.parts) {\r\n      setId([construction.id, construction.parts])\r\n      setActiv(construction.id)\r\n    } else {\r\n      setId([construction.id])\r\n      setActiv(construction.id)\r\n    }\r\n  }\r\n\r\n  let inventoryAvailability: InventoryInt[] = inventory.filter(\r\n    (i: InventoryInt) =>\r\n      i.placeId === construction.id ||\r\n      (construction.parts && construction.parts.includes(i.placeId))\r\n  )\r\n\r\n  return (\r\n    <div>\r\n      {construction.parts && (\r\n        <span className=\"icon\" onClick={togle}>\r\n          <svg\r\n            stroke-width=\"10\"\r\n            stroke=\"#2F3435\"\r\n            height=\"17px\"\r\n            id=\"Layer_1\"\r\n            version=\"1.1\"\r\n            viewBox=\"0 0 128 128\"\r\n            width=\"22px\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n          >\r\n            <line x1=\"111\" x2=\"64\" y1=\"40.5\" y2=\"87.499\" />\r\n            <line x1=\"64\" x2=\"17\" y1=\"87.499\" y2=\"40.5\" />\r\n          </svg>\r\n        </span>\r\n      )}\r\n      <span\r\n        className={construction.id === activElement ? \"activ\" : \"name\"}\r\n        onClick={() => addId()}\r\n      >\r\n        <span>{construction.data.name}</span>\r\n      </span>\r\n      {inventoryAvailability.length > 0 && (\r\n        <span className=\"iconInv\">\r\n          <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M12 7v-2l-1.2-0.4c-0.1-0.3-0.2-0.7-0.4-1l0.6-1.2-1.5-1.3-1.1 0.5c-0.3-0.2-0.6-0.3-1-0.4l-0.4-1.2h-2l-0.4 1.2c-0.3 0.1-0.7 0.2-1 0.4l-1.1-0.5-1.4 1.4 0.6 1.2c-0.2 0.3-0.3 0.6-0.4 1l-1.3 0.3v2l1.2 0.4c0.1 0.3 0.2 0.7 0.4 1l-0.5 1.1 1.4 1.4 1.2-0.6c0.3 0.2 0.6 0.3 1 0.4l0.3 1.3h2l0.4-1.2c0.3-0.1 0.7-0.2 1-0.4l1.2 0.6 1.4-1.4-0.6-1.2c0.2-0.3 0.3-0.6 0.4-1l1.2-0.4zM3 6c0-1.7 1.3-3 3-3s3 1.3 3 3c0 1.7-1.3 3-3 3s-3-1.3-3-3z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M7.5 6c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M16 3v-1h-0.6c0-0.2-0.1-0.4-0.2-0.5l0.4-0.4-0.7-0.7-0.4 0.4c-0.2-0.1-0.3-0.2-0.5-0.2v-0.6h-1v0.6c-0.2 0-0.4 0.1-0.5 0.2l-0.4-0.4-0.7 0.7 0.4 0.4c-0.1 0.2-0.2 0.3-0.2 0.5h-0.6v1h0.6c0 0.2 0.1 0.4 0.2 0.5l-0.4 0.4 0.7 0.7 0.4-0.4c0.2 0.1 0.3 0.2 0.5 0.2v0.6h1v-0.6c0.2 0 0.4-0.1 0.5-0.2l0.4 0.4 0.7-0.7-0.4-0.4c0.1-0.2 0.2-0.3 0.2-0.5h0.6zM13.5 3.5c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M15.4 11.8c-0.1-0.3-0.2-0.6-0.4-0.9l0.3-0.6-0.7-0.7-0.5 0.4c-0.3-0.2-0.6-0.3-0.9-0.4l-0.2-0.6h-1l-0.2 0.6c-0.3 0.1-0.6 0.2-0.9 0.4l-0.6-0.3-0.7 0.7 0.3 0.6c-0.2 0.3-0.3 0.6-0.4 0.9l-0.5 0.1v1l0.6 0.2c0.1 0.3 0.2 0.6 0.4 0.9l-0.3 0.6 0.7 0.7 0.6-0.3c0.3 0.2 0.6 0.3 0.9 0.4l0.1 0.5h1l0.2-0.6c0.3-0.1 0.6-0.2 0.9-0.4l0.6 0.3 0.7-0.7-0.4-0.5c0.2-0.3 0.3-0.6 0.4-0.9l0.6-0.2v-1l-0.6-0.2zM12.5 14c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5z\"\r\n            ></path>\r\n          </svg>\r\n        </span>\r\n      )}\r\n      {openChildParts && (\r\n        <div>\r\n          {rooms &&\r\n            rooms.map((room: PlaceInt) => (\r\n              <div key={room.id}>\r\n                <Room\r\n                  room={room}\r\n                  setId={setId}\r\n                  setActiv={setActiv}\r\n                  activElement={activElement}\r\n                  inventory={inventory}\r\n                />\r\n              </div>\r\n            ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import { useState } from \"react\"\r\nimport \"./building.css\"\r\nimport { InventoryInt, PlaceInt } from \"../Interfaces/interfaces\"\r\nimport { PartOfBuilding } from \"./PartOfBuilding\"\r\n\r\ninterface Props {\r\n  build: PlaceInt\r\n  places: PlaceInt[]\r\n  setId: React.Dispatch<React.SetStateAction<string[]>>\r\n  setActiv: React.Dispatch<React.SetStateAction<string>>\r\n  activElement: string\r\n  inventory: InventoryInt[]\r\n}\r\n\r\nexport const MainBuilding: React.FC<Props> = ({\r\n  build,\r\n  places,\r\n  setId,\r\n  setActiv,\r\n  activElement,\r\n  inventory,\r\n}) => {\r\n  const [openpartsOfBuilding, setOpen] = useState<boolean>(false)\r\n  const togle = () => setOpen(!openpartsOfBuilding)\r\n\r\n  let partsOfBuilding: PlaceInt[] =\r\n    build && places.filter((i: PlaceInt) => build.parts.includes(i.id))\r\n\r\n  let childConstructionsParts: string[] = partsOfBuilding.flatMap(\r\n    (c: PlaceInt) => c.parts\r\n  )\r\n  let idsByPartsBuild: string[] =\r\n    partsOfBuilding &&\r\n    places\r\n      .filter((i: PlaceInt) => childConstructionsParts.includes(i.id))\r\n      .flatMap((p: PlaceInt) => p.id)\r\n\r\n  const addId = (id: string | string[]) => {\r\n    idsByPartsBuild\r\n      ? setId([build.id, ...build.parts, ...idsByPartsBuild])\r\n      : setId([build.id, ...build.parts])\r\n    setActiv(build.id)\r\n  }\r\n\r\n  let idsInvent: string[] = inventory.map((p: InventoryInt) => p.placeId)\r\n\r\n  let partsChild: string[] = partsOfBuilding.flatMap((p: PlaceInt) => p.parts)\r\n  let idsChild: string[] = partsOfBuilding.flatMap((p: PlaceInt) => p.id)\r\n\r\n  let inventoryAvailability: string[] = idsInvent.filter(\r\n    (i: string) => idsChild.includes(i) || partsChild.includes(i)\r\n  )\r\n\r\n  return (\r\n    <div className=\"wrap\">\r\n      <span className=\"icon\" onClick={togle}>\r\n        <svg\r\n          strokeWidth=\"10\"\r\n          stroke=\"#2F3435\"\r\n          height=\"17px\"\r\n          id=\"Layer_1\"\r\n          version=\"1.1\"\r\n          viewBox=\"0 0 128 128\"\r\n          width=\"22px\"\r\n          xmlns=\"http://www.w3.org/2000/svg\"\r\n        >\r\n          <line x1=\"111\" x2=\"64\" y1=\"40.5\" y2=\"87.499\" />\r\n          <line x1=\"64\" x2=\"17\" y1=\"87.499\" y2=\"40.5\" />\r\n        </svg>\r\n      </span>\r\n      <span\r\n        className={build.id === activElement ? \"activ\" : \"name\"}\r\n        onClick={() => addId(build.id)}\r\n      >\r\n        <span>{build.data.name}</span>\r\n      </span>\r\n      {inventoryAvailability.length > 0 && (\r\n        <span className=\"iconInv\">\r\n          <svg\r\n            version=\"1.1\"\r\n            xmlns=\"http://www.w3.org/2000/svg\"\r\n            width=\"16\"\r\n            height=\"16\"\r\n            viewBox=\"0 0 16 16\"\r\n          >\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M12 7v-2l-1.2-0.4c-0.1-0.3-0.2-0.7-0.4-1l0.6-1.2-1.5-1.3-1.1 0.5c-0.3-0.2-0.6-0.3-1-0.4l-0.4-1.2h-2l-0.4 1.2c-0.3 0.1-0.7 0.2-1 0.4l-1.1-0.5-1.4 1.4 0.6 1.2c-0.2 0.3-0.3 0.6-0.4 1l-1.3 0.3v2l1.2 0.4c0.1 0.3 0.2 0.7 0.4 1l-0.5 1.1 1.4 1.4 1.2-0.6c0.3 0.2 0.6 0.3 1 0.4l0.3 1.3h2l0.4-1.2c0.3-0.1 0.7-0.2 1-0.4l1.2 0.6 1.4-1.4-0.6-1.2c0.2-0.3 0.3-0.6 0.4-1l1.2-0.4zM3 6c0-1.7 1.3-3 3-3s3 1.3 3 3c0 1.7-1.3 3-3 3s-3-1.3-3-3z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M7.5 6c0 0.828-0.672 1.5-1.5 1.5s-1.5-0.672-1.5-1.5c0-0.828 0.672-1.5 1.5-1.5s1.5 0.672 1.5 1.5z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M16 3v-1h-0.6c0-0.2-0.1-0.4-0.2-0.5l0.4-0.4-0.7-0.7-0.4 0.4c-0.2-0.1-0.3-0.2-0.5-0.2v-0.6h-1v0.6c-0.2 0-0.4 0.1-0.5 0.2l-0.4-0.4-0.7 0.7 0.4 0.4c-0.1 0.2-0.2 0.3-0.2 0.5h-0.6v1h0.6c0 0.2 0.1 0.4 0.2 0.5l-0.4 0.4 0.7 0.7 0.4-0.4c0.2 0.1 0.3 0.2 0.5 0.2v0.6h1v-0.6c0.2 0 0.4-0.1 0.5-0.2l0.4 0.4 0.7-0.7-0.4-0.4c0.1-0.2 0.2-0.3 0.2-0.5h0.6zM13.5 3.5c-0.6 0-1-0.4-1-1s0.4-1 1-1 1 0.4 1 1c0 0.6-0.4 1-1 1z\"\r\n            ></path>\r\n            <path\r\n              fill=\"#444444\"\r\n              d=\"M15.4 11.8c-0.1-0.3-0.2-0.6-0.4-0.9l0.3-0.6-0.7-0.7-0.5 0.4c-0.3-0.2-0.6-0.3-0.9-0.4l-0.2-0.6h-1l-0.2 0.6c-0.3 0.1-0.6 0.2-0.9 0.4l-0.6-0.3-0.7 0.7 0.3 0.6c-0.2 0.3-0.3 0.6-0.4 0.9l-0.5 0.1v1l0.6 0.2c0.1 0.3 0.2 0.6 0.4 0.9l-0.3 0.6 0.7 0.7 0.6-0.3c0.3 0.2 0.6 0.3 0.9 0.4l0.1 0.5h1l0.2-0.6c0.3-0.1 0.6-0.2 0.9-0.4l0.6 0.3 0.7-0.7-0.4-0.5c0.2-0.3 0.3-0.6 0.4-0.9l0.6-0.2v-1l-0.6-0.2zM12.5 14c-0.8 0-1.5-0.7-1.5-1.5s0.7-1.5 1.5-1.5 1.5 0.7 1.5 1.5-0.7 1.5-1.5 1.5z\"\r\n            ></path>\r\n          </svg>\r\n        </span>\r\n      )}\r\n      {openpartsOfBuilding && (\r\n        <div>\r\n          {partsOfBuilding.map((construction) => (\r\n            <PartOfBuilding\r\n              inventory={inventory}\r\n              activElement={activElement}\r\n              key={construction.id}\r\n              setActiv={setActiv}\r\n              construction={construction}\r\n              setId={setId}\r\n              places={places}\r\n            />\r\n          ))}\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n}\r\n","import \"./building.css\"\r\nimport firebase from \"firebase\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useState } from \"react\"\r\nimport { InventoryInt, PlaceInt } from \"../Interfaces/interfaces\"\r\n\r\ninterface Props {\r\n  idInventory: string[]\r\n  setinventory: any\r\n  activElement: string\r\n  inventory: InventoryInt[]\r\n  invent: InventoryInt\r\n  changePlace: PlaceInt\r\n  childEl: PlaceInt[]\r\n}\r\n\r\nexport const Inventory: React.FC<Props> = ({\r\n  idInventory,\r\n  setinventory,\r\n  inventory,\r\n  invent,\r\n  changePlace,\r\n  childEl,\r\n  activElement,\r\n}) => {\r\n  const {\r\n    register: register2,\r\n    handleSubmit: handleSubmit2,\r\n    errors: errors2,\r\n    reset: reset2,\r\n  } = useForm()\r\n  const onSubmitEdit = (data: any) => {\r\n    let { editInventory } = data\r\n    console.log(data)\r\n    editInvent(editInventory)\r\n    reset2()\r\n  }\r\n\r\n  const [openEdit, setOpenEdit] = useState<boolean>(false)\r\n  const togleEditWind = () => {\r\n    setOpenEdit(!openEdit)\r\n  }\r\n\r\n  const deleteInvent = (id: string) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"inventory\")\r\n      .doc(id)\r\n      .delete()\r\n      .then(() => {\r\n        setinventory(inventory.filter((i) => i.id !== id))\r\n      })\r\n  }\r\n\r\n  const editInvent = (editInventory: string) => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"inventory\")\r\n      .doc(invent.id)\r\n      .update({\r\n        name: editInventory,\r\n        count: 2,\r\n      })\r\n      .then(() => {\r\n        togleEditWind()\r\n        setinventory([\r\n          ...inventory.filter((i) => i.id !== invent.id),\r\n          { data: { name: editInventory }, placeId: activElement },\r\n        ])\r\n      })\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {openEdit ? (\r\n        <div className=\"inputEdit\">\r\n          {errors2.editInventory && <p>минимум 3 символа</p>}\r\n          <form onSubmit={handleSubmit2(onSubmitEdit)}>\r\n            <input\r\n              defaultValue={invent.data.name}\r\n              name=\"editInventory\"\r\n              ref={register2({ required: true, minLength: 3 })}\r\n            />\r\n            <button type=\"submit\">ok</button>\r\n          </form>\r\n        </div>\r\n      ) : (\r\n        <div>\r\n          <span>{invent.data.name}</span>\r\n          <span>: &nbsp;{invent.data.count}</span>шт\r\n          {childEl.includes(changePlace) && (\r\n            <span>\r\n              <span className=\"icon\" onClick={() => deleteInvent(invent.id)}>\r\n                <svg\r\n                  id=\"Layer_1\"\r\n                  height=\"15px\"\r\n                  width=\"15px\"\r\n                  version=\"1.1\"\r\n                  viewBox=\"0 0 128 128\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <circle fill=\"#C93636\" cx=\"64\" cy=\"64\" r=\"64\" />\r\n                  <path\r\n                    fill=\"#FFFFFF\"\r\n                    d=\"M100.3,90.4L73.9,64l26.3-26.4c0.4-0.4,0.4-1,0-1.4l-8.5-8.5c-0.4-0.4-1-0.4-1.4,0L64,54.1L37.7,27.8  c-0.4-0.4-1-0.4-1.4,0l-8.5,8.5c-0.4,0.4-0.4,1,0,1.4L54,64L27.7,90.3c-0.4,0.4-0.4,1,0,1.4l8.5,8.5c0.4,0.4,1.1,0.4,1.4,0L64,73.9  l26.3,26.3c0.4,0.4,1.1,0.4,1.5,0.1l8.5-8.5C100.7,91.4,100.7,90.8,100.3,90.4z\"\r\n                  />\r\n                </svg>\r\n              </span>\r\n              <span className=\"iconEdit\" onClick={togleEditWind}>\r\n                <svg\r\n                  height=\"20px\"\r\n                  id=\"Layer_1\"\r\n                  version=\"1.1\"\r\n                  viewBox=\"0 0 64 64\"\r\n                  width=\"20px\"\r\n                  xmlns=\"http://www.w3.org/2000/svg\"\r\n                >\r\n                  <path d=\"M55.736,13.636l-4.368-4.362c-0.451-0.451-1.044-0.677-1.636-0.677c-0.592,0-1.184,0.225-1.635,0.676l-3.494,3.484   l7.639,7.626l3.494-3.483C56.639,15.998,56.639,14.535,55.736,13.636z\" />\r\n                  <polygon points=\"21.922,35.396 29.562,43.023 50.607,22.017 42.967,14.39  \" />\r\n                  <polygon points=\"20.273,37.028 18.642,46.28 27.913,44.654  \" />\r\n                  <path d=\"M41.393,50.403H12.587V21.597h20.329l5.01-5H10.82c-1.779,0-3.234,1.455-3.234,3.234v32.339   c0,1.779,1.455,3.234,3.234,3.234h32.339c1.779,0,3.234-1.455,3.234-3.234V29.049l-5,4.991V50.403z\" />\r\n                </svg>\r\n              </span>\r\n            </span>\r\n          )}\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import firebase from \"firebase\"\r\nimport { useForm } from \"react-hook-form\"\r\nimport { useState } from \"react\"\r\nimport \"./building.css\"\r\nimport { Inventory } from \"./Inventory\"\r\nimport { InventoryInt, PlaceInt } from \"../Interfaces/interfaces\"\r\n\r\ninterface Props {\r\n  idInventory: string[]\r\n  places: PlaceInt[]\r\n  setinventory: any\r\n  activElement: string\r\n  inventory: InventoryInt[]\r\n}\r\n\r\nexport const InventoryList: React.FC<Props> = ({\r\n  idInventory,\r\n  setinventory,\r\n  inventory,\r\n  activElement,\r\n  places,\r\n}) => {\r\n  const { register, handleSubmit, errors, reset } = useForm()\r\n  const onSubmit = (data: any) => {\r\n    let { nameInventory } = data\r\n    addInventory(nameInventory)\r\n    reset()\r\n  }\r\n\r\n  let sortedInventory: InventoryInt[] = inventory.filter((i: InventoryInt) =>\r\n    idInventory.includes(i.placeId)\r\n  )\r\n\r\n  const [openInputAddInvent, setOpen] = useState<boolean>(false)\r\n  const togle = () => setOpen(!openInputAddInvent)\r\n\r\n  const addInventory = (nameInventory: string) => {\r\n    let filestore = firebase.firestore()\r\n    filestore\r\n      .collection(\"inventory\")\r\n      .doc()\r\n      .set({\r\n        name: nameInventory,\r\n        count: 1,\r\n        place: filestore.collection(\"places\").doc(activElement), // main-101 – id места\r\n      })\r\n      .then(() => {\r\n        setinventory([\r\n          ...inventory,\r\n          { data: { name: nameInventory, count: 1 }, placeId: activElement },\r\n        ])\r\n        togle()\r\n      })\r\n  }\r\n\r\n  let changePlace: PlaceInt = places.filter(\r\n    (p: PlaceInt) => p.id === activElement\r\n  )[0]\r\n  let childEl: PlaceInt[] = places.filter((p: PlaceInt) => !p.parts)\r\n\r\n  return (\r\n    <>\r\n      <h2> Оборудование</h2>\r\n      {activElement && (\r\n        <div>\r\n          <span>\r\n            <b>Оборудование в:&nbsp; {changePlace && changePlace.data.name}</b>\r\n          </span>\r\n          {childEl.includes(changePlace) && (\r\n            <span className=\"icon\" onClick={togle}>\r\n              &nbsp;\r\n              <svg\r\n                id=\"Layer_1\"\r\n                height=\"22px\"\r\n                width=\"22px\"\r\n                version=\"1.1\"\r\n                viewBox=\"0 0 128 128\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <circle fill=\"#31AF91\" cx=\"64\" cy=\"64\" r=\"64\" />\r\n                <path\r\n                  fill=\"#FFFFFF\"\r\n                  d=\"M103,57H71V25c0-0.6-0.4-1-1-1H58c-0.6,0-1,0.4-1,1v32H25c-0.6,0-1,0.4-1,1v12c0,0.6,0.4,1,1,1h32v32  c0,0.6,0.4,1,1,1h12c0.6,0,1-0.4,1-1V71h32c0.6,0,1-0.4,1-1V58C104,57.4,103.6,57,103,57z\"\r\n                />\r\n              </svg>\r\n            </span>\r\n          )}\r\n          {sortedInventory.length < 1 ? (\r\n            <div>\r\n              <span>нет оборудования</span>\r\n            </div>\r\n          ) : (\r\n            sortedInventory.map((invent) => (\r\n              <div key={invent.id}>\r\n                <Inventory\r\n                  invent={invent}\r\n                  activElement={activElement}\r\n                  childEl={childEl}\r\n                  changePlace={changePlace}\r\n                  idInventory={idInventory}\r\n                  setinventory={setinventory}\r\n                  inventory={inventory}\r\n                />\r\n              </div>\r\n            ))\r\n          )}\r\n          <div>\r\n            {errors.nameInventory && <p>минимум 3 символа</p>}\r\n            {openInputAddInvent && (\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                <input\r\n                  name=\"nameInventory\"\r\n                  placeholder=\"введите название оборудования\"\r\n                  ref={register({ required: true, minLength: 3 })}\r\n                />\r\n                <button type=\"submit\">добавить</button>\r\n              </form>\r\n            )}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n","import React, { useEffect, useState } from \"react\"\r\nimport firebase from \"firebase\"\r\nimport \"./building.css\"\r\nimport { MainBuilding } from \"./MainBuilding\"\r\nimport { InventoryList } from \"./InventoryList\"\r\nimport { PlaceInt, InventoryInt } from \"../Interfaces/interfaces\"\r\n\r\nexport const Building: React.FC = () => {\r\n  var firebaseConfig = {\r\n    apiKey: \"AIzaSyD6DnGbVfdJlDJ_pEOUfDfTDJrA8j3lIs8\",\r\n    authDomain: \"dv-inventory.firebaseapp.com\",\r\n    databaseURL: \"https://dv-inventory.firebaseio.com\",\r\n    projectId: \"dv-inventory\",\r\n    storageBucket: \"dv-inventory.appspot.com\",\r\n    messagingSenderId: \"130062240176\",\r\n    appId: \"1:130062240176:web:ecbca5d29b37d25c6cee75\",\r\n  }\r\n\r\n  if (!firebase.apps.length) {\r\n    firebase.initializeApp(firebaseConfig)\r\n  }\r\n\r\n  const [places, setplaces] = useState<PlaceInt[]>([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"places\")\r\n      .get()\r\n      .then((response) => {\r\n        let docs = response.docs.map((x) => ({\r\n          id: x.id,\r\n          data: x.data(),\r\n          parts: x.data().parts && x.data().parts.map((part: any) => part.id),\r\n        }))\r\n        console.log(docs)\r\n        setplaces(docs)\r\n      })\r\n  }, [])\r\n\r\n  const [inventory, setinventory] = useState<InventoryInt[]>([])\r\n\r\n  useEffect(() => {\r\n    firebase\r\n      .firestore()\r\n      .collection(\"inventory\")\r\n      .get()\r\n      .then((response) => {\r\n        let docs = response.docs.map((x) => ({\r\n          id: x.id,\r\n          data: x.data(),\r\n          placeId: x.data().place && x.data().place.id, ///place.id\r\n        }))\r\n        console.info(docs)\r\n        setinventory(docs)\r\n      })\r\n  }, [])\r\n\r\n  const [activElement, setActiv] = useState<string>(\"\")\r\n\r\n  const [idInventory, setId] = useState<string[]>([])\r\n\r\n  let sortPlacesByParts: string[] = places\r\n    .filter((i: PlaceInt) => i.parts)\r\n    .flatMap((p) => p.parts)\r\n  let mainBuildings: PlaceInt[] = places.filter(\r\n    (i: PlaceInt) => !sortPlacesByParts.includes(i.id)\r\n  )\r\n\r\n  return (\r\n    <div className={\"wrapper\"}>\r\n      <div className={\"block\"}>\r\n        <h2>Здание</h2>\r\n        {mainBuildings.map((build) => (\r\n          <MainBuilding\r\n            key={build.id}\r\n            build={build}\r\n            places={places}\r\n            activElement={activElement}\r\n            inventory={inventory}\r\n            setActiv={setActiv}\r\n            setId={setId}\r\n          />\r\n        ))}\r\n      </div>\r\n      <div className={\"block\"}>\r\n        <InventoryList\r\n          idInventory={idInventory}\r\n          places={places}\r\n          activElement={activElement}\r\n          inventory={inventory}\r\n          setinventory={setinventory}\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import { Building } from \"./Component/Building\";\n\nexport default function App() {\n  return (\n    <div>\n      <Building />\n    </div>\n  );\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"./index.css\";\n\n\nReactDOM.render(\n  <>\n    <App />\n  </>,\n  document.getElementById(\"root\")\n);\n\nreportWebVitals();\n"],"sourceRoot":""}